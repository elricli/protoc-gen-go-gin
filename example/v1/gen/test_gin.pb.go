// Code generated by protoc-gen-go-gin. DO NOT EDIT.
// versions:
// - protoc-gen-go-gin v1.0.0
// - protoc            (unknown)
// source: test.proto

package main

import (
	http "net/http"
	context "context"
	gin "github.com/gin-gonic/gin"
)

type ServiceResponseHandler func(resp http.ResponseWriter, reply any, err error)

type FooServiceResponseHandler ServiceResponseHandler

// FooService is a service that returns a FooResponse.
type FooService interface {
	// GetFoo returns a FooResponse.
	GetFoo(context.Context, *FooRequest) (*FooResponse, error)
}

func RegisterFooService(eng *gin.Engine, svr FooService, rh FooServiceResponseHandler) {
	initFooServiceRouter(eng, svr, rh)
}

func initFooServiceRouter(eng *gin.Engine, svr FooService, rh FooServiceResponseHandler) {
	eng.GET("/api/v1/foo", func(ctx *gin.Context) {
		in := &FooRequest{}
		if err := ctx.Bind(in); err != nil {
			rh(ctx.Writer, nil, err)
			return
		}
		out, err := svr.GetFoo(ctx, in)
		if err != nil {
			rh(ctx.Writer, nil, err)
			return
		}
		rh(ctx.Writer, out, nil)
	})
}
